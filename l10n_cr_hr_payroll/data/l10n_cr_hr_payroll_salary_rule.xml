<?xml version="1.0" encoding="utf-8" ?>

<openerp>
    <data noupdate="1">

        <record id="hr_payroll_rules_gross" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_gross_salary"/> 
            <field name="name">Salario Bruto</field>
            <field name="code">BRUTO</field>
            <field name="sequence">200</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.BASE - categories.DPA  + categories.BON</field>
        </record>

        <record id="hr_payroll_rules_net" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_net_salary"/> 
            <field name="name">Salario Neto</field>
            <field name="code">NETO</field>
            <field name="sequence">300</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.BRUTO - categories.DED</field>
        </record>

        <record id="hr_payroll_rules_worker_ssc" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_deduction_salary"/> 
            <field name="name">Cargas Sociales Obreras</field>
            <field name="code">CSO</field>
            <field name="sequence">201</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">none</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">BRUTO</field>
            <field name="quantity">1</field>
            <field name="amount_percentage">9.34</field>
        </record>

        <record id="hr_payroll_rules_employer_ssc" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_head_salary"/> 
            <field name="name">Cargas Sociales Patronales</field>
            <field name="code">CSP</field>
            <field name="sequence">205</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">none</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">BRUTO</field>
            <field name="quantity">1</field>
            <field name="amount_percentage">26.34</field>
        </record>

        <record id="hr_payroll_rules_provisions_thirteenth_monthly_payment" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_provisions_salary"/> 
            <field name="name">Provisión para Aguinaldo</field>
            <field name="code">Aguinaldo</field>
            <field name="sequence">215</field>
            <field name="condition_select">none</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">BRUTO</field>
            <field name="quantity">1</field>
            <field name="amount_percentage">8.3300</field>
        </record>

        <record id="hr_payroll_rules_provisions_vacations" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_provisions_salary"/> 
            <field name="name">Provisión para Vacaciones</field>
            <field name="code">Vacaciones</field>
            <field name="sequence">217</field>
            <field name="condition_select">none</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">BRUTO</field>
            <field name="quantity">1</field>
            <field name="amount_percentage">4.1600</field>
        </record> 
          
        <record id="hr_payroll_rules_rent" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_deduction_salary"/>
            <field name="name">Renta</field>
            <field name="code">RENTA</field>
            <field name="sequence">216</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = hr_salary_rule.python_expresion_rent(cr, uid, company, inputs, employee, categories, payslip)
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result= hr_salary_rule.compute_total_rent(cr, uid, company, inputs, employee, categories, payslip)
            </field>
        </record>

        <record id="hr_payroll_rules_retroactive_pay" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Pago Retroactivo</field>
            <field name="code">RET</field>
            <field name="sequence">55</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = inputs.RET</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = inputs.RET.amount
            </field>
        </record>

        <record id="hr_payroll_rules_bonification" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_bon_salary"/>
            <field name="name">Bonificación</field>
            <field name="code">BON</field>
            <field name="sequence">120</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = inputs.BON</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = inputs.BON.amount</field>
        </record>
        
        <record id="hr_payroll_rules_aditional_pay" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Pagos Adicionales</field>
            <field name="code">SOP</field>
            <field name="sequence">54</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = inputs.SOP</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = inputs.SOP.amount</field>
        </record>
        
        <record id="hr_payroll_rules_contractual_pay" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_contract_salary"/>
            <field name="name">Salario Contractual</field>
            <field name="code">CONTRATO</field>
            <field name="sequence">1</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.wage</field>
        </record>
        
        <record id="hr_payroll_rules_accrued_pay" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_accrued_salary"/>
            <field name="name">Salario Devengado</field>
            <field name="code">DEVENGADO</field>
            <field name="sequence">400</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.NETO + categories.OPAG - categories.AYP - categories.ORET</field>
        </record>

        <!-- Monthly Rules -->
        <record id="hr_payroll_rules_base_monthly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_base_salary"/> 
            <field name="name">Salario Base - Mensual</field>
            <field name="code">BASE</field>
            <field name="sequence">100</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.CONTRATO + categories.SOP</field>
        </record>
        
        <record id="hr_payroll_rules_extra_hour_1_5_monthly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Hora Extra-1.5 - Mensual</field>
            <field name="code">EXT</field>
            <field name="sequence">50</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.HE</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.HE.number_of_hours * wage_hour * 1.5 + worked_days.HE.number_of_days * wage_day * 1.5
           </field>
        </record>

        <record id="hr_payroll_rules_holiday_monthly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Pago por Feriado-1.0 - Mensual</field>
            <field name="code">FE</field>
            <field name="sequence">51</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.FE
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.FE.number_of_hours * wage_hour + worked_days.FE.number_of_days * wage_day
           </field>
        </record>

        <record id="hr_payroll_rules_extra_hour_holiday_monthly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Extras en Feriado-2.0 - Mensual</field>
            <field name="code">EXT-FE</field>
            <field name="sequence">52</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.HEF</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.HEF.number_of_hours * wage_hour * 2 + worked_days.HEF.number_of_days * wage_day * 2
           </field>
        </record>

        <record id="hr_payroll_rules_absence_deduction_monthly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_absence_salary"/>
            <field name="name">Rebajo por Ausencias-1.0 - Mensual</field>
            <field name="code">Ausencias</field>
            <field name="sequence">110</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.AUS
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.AUS.number_of_hours * wage_hour + worked_days.AUS.number_of_days * wage_day
           </field>
        </record>

        <!-- Fortnightly Rules -->
        <record id="hr_payroll_rules_base_fortnightly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_base_salary"/> 
            <field name="name">Salario Base - Quincenal</field>
            <field name="code">BASE</field>
            <field name="sequence">100</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.CONTRATO / 2 + categories.SOP</field>
        </record>

        <record id="hr_payroll_rules_extra_hour_1_5_fortnightly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Hora Extra-1.5 - Quincenal</field>
            <field name="code">EXT</field>
            <field name="sequence">50</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.HE</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.HE.number_of_hours * wage_hour * 1.5 + worked_days.HE.number_of_days * wage_day * 1.5
           </field>
        </record>

        <record id="hr_payroll_rules_holiday_fortnightly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Pago por Feriado-1.0 - Quincenal</field>
            <field name="code">FE</field>
            <field name="sequence">51</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.FE
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.FE.number_of_hours * wage_hour + worked_days.FE.number_of_days * wage_day
           </field>
        </record>

        <record id="hr_payroll_rules_extra_hour_holiday_fortnightly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Extras en Feriado-2.0 - Quincenal</field>
            <field name="code">EXT-FE</field>
            <field name="sequence">52</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.HEF</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.HEF.number_of_hours * wage_hour * 2 + worked_days.HEF.number_of_days * wage_day * 2
           </field>
        </record>

        <record id="hr_payroll_rules_absence_deduction_fortnightly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_absence_salary"/>
            <field name="name">Rebajo por Ausencias-1.0 - Quincenal</field>
            <field name="code">Ausencias</field>
            <field name="sequence">53</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.AUS
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.AUS.number_of_hours * wage_hour + worked_days.AUS.number_of_days * wage_day
           </field>
        </record>

        <!-- Biweekly Rules -->
        <record id="hr_payroll_rules_base_biweekly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_base_salary"/> 
            <field name="name">Salario Base - Bisemanal</field>
            <field name="code">BASE</field>
            <field name="sequence">100</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.CONTRATO * 12 / 26 + categories.SOP</field>
        </record>

        <record id="hr_payroll_rules_extra_hour_1_5_biweekly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Hora Extra-1.5 - Bisemanal</field>
            <field name="code">EXT</field>
            <field name="sequence">50</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.HE
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.HE.number_of_hours * wage_hour * 1.5 + worked_days.HE.number_of_days * wage_day * 1.5
           </field>
        </record>

        <record id="hr_payroll_rules_holiday_biweekly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Pago por Feriado-1.0 - Bisemanal</field>
            <field name="code">FE</field>
            <field name="sequence">51</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.FE
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.FE.number_of_hours * wage_hour + worked_days.FE.number_of_days * wage_day
           </field>
        </record>

        <record id="hr_payroll_rules_extra_hour_holiday_biweekly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Extras en Feriado-2.0 - Bisemanal</field>
            <field name="code">EXT-FE</field>
            <field name="sequence">52</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.HEF</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.HEF.number_of_hours * wage_hour * 2 + worked_days.HEF.number_of_days * wage_day * 2
           </field>
        </record>
        
        <record id="hr_payroll_rules_absence_deduction_biweekly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_absence_salary"/>
            <field name="name">Rebajo por Ausencias-1.0 - Bisemanal</field>
            <field name="code">Ausencias</field>
            <field name="sequence">53</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.AUS
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.AUS.number_of_hours * wage_hour + worked_days.AUS.number_of_days * wage_day
           </field>
        </record>

        <!-- Weekly Rules -->
        <record id="hr_payroll_rules_base_weekly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_base_salary"/> 
            <field name="name">Salario Base - Semanal</field>
            <field name="code">BASE</field>
            <field name="sequence">100</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.CONTRATO * 12 / 52 + categories.SOP</field>
        </record>

        <record id="hr_payroll_rules_extra_hour_1_5_weekly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Hora Extra-1.5 - Semanal</field>
            <field name="code">EXT</field>
            <field name="sequence">50</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.HE</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.HE.number_of_hours * wage_hour * 1.5 + worked_days.HE.number_of_days * wage_day * 1.5
           </field>
        </record>
        
        <record id="hr_payroll_rules_holiday_weekly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Pago por Feriado-1.0 - Semanal</field>
            <field name="code">FE</field>
            <field name="sequence">51</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.FE</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.FE.number_of_hours * wage_hour + worked_days.FE.number_of_days * wage_day
           </field>
        </record>
        
        <record id="hr_payroll_rules_extra_hour_holiday_weekly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Extras en Feriado-2.0 - Semanal</field>
            <field name="code">EXT-FE</field>
            <field name="sequence">52</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.HEF</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.HEF.number_of_hours * wage_hour * 2 + worked_days.HEF.number_of_days * wage_day * 2
           </field>
        </record>
        
        <record id="hr_payroll_rules_absence_deduction_weekly" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_absence_salary"/>
            <field name="name">Rebajo por Ausencias-1.0 - Semanal</field>
            <field name="code">Ausencias</field>
            <field name="sequence">53</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.AUS</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_day = contract.wage / 30
wage_hour = wage_day / 8
result = worked_days.AUS.number_of_hours * wage_hour + worked_days.AUS.number_of_days * wage_day
           </field>
        </record>

        <!-- Per Hour Rules -->
        <record id="hr_payroll_rules_base_per_hour" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_base_salary"/> 
            <field name="name">Salario Base - Jornal</field>
            <field name="code">BASE</field>
            <field name="sequence">1</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
                wage_hour = contract.wage 
                if worked_days.HN:
                    result = worked_days.HN.number_of_hours * wage_hour
                else:
                    result = 0
           </field>
        </record>

        <record id="hr_payroll_rules_extra_hour_1_5_per_hour" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Hora Extra-1.5 - Jornal</field>
            <field name="code">EXT</field>
            <field name="sequence">50</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.HE</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_hour = contract.wage * 1.5 
result = worked_days.HE.number_of_hours * wage_hour
           </field>
        </record>

        <record id="hr_payroll_rules_holiday_per_hour" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Pago por Feriado-1.0 - Jornal</field>
            <field name="code">FE</field>
            <field name="sequence">51</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.FE</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_hour = contract.wage 
result = worked_days.FE.number_of_hours * wage_hour
           </field>
        </record>

        <record id="hr_payroll_rules_extra_hour_holiday_per_hour" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_aditional_pay_salary"/>
            <field name="name">Extras en Feriado-2.0 - Jornal</field>
            <field name="code">EXT-FE</field>
            <field name="sequence">52</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.HEF</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
wage_hour = contract.wage 
result = worked_days.HE.number_of_hours * wage_hour * 2
           </field>
        </record>
        
        <record id="hr_payroll_rules_absence_deduction_per_hour" model="hr.salary.rule">
            <field name="category_id" ref="hr_payroll_absence_salary"/>
            <field name="name">Rebajo por Ausencias-1.0 - Jornal</field>
            <field name="code">Ausencias</field>
            <field name="sequence">53</field>
            <field name="appears_on_report">True</field>
            <field name="condition_select">python</field>
            <field name="condition_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = worked_days.AUS</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.
# company: object of res.company. It is a browse record
# hr_salary_rule: object for call hr_salary_rule functions
# cr: cursor 
# uid: uid

# Note: returned value have to be set in the variable 'result'
result = 0.00</field>
        </record>

        <!-- Structures -->
        <!-- Monthly -->
        <record id="data_structure_monthly" model="hr.payroll.structure">
            <field name="name">Estructura Mensual</field>
            <field name="code">MENSUAL</field>
            <field name="parent_id" eval="False"/>
            <field name="rule_ids" eval="[(4, ref('hr_payroll_rules_gross')),
                                          (4, ref('hr_payroll_rules_net')),
                                          (4, ref('hr_payroll_rules_worker_ssc')),
                                          (4, ref('hr_payroll_rules_employer_ssc')),
                                          (4, ref('hr_payroll_rules_provisions_thirteenth_monthly_payment')),
                                          (4, ref('hr_payroll_rules_provisions_vacations')),
                                          (4, ref('hr_payroll_rules_rent')),
                                          (4, ref('hr_payroll_rules_retroactive_pay')),
                                          (4, ref('hr_payroll_rules_bonification')),
                                          (4, ref('hr_payroll_rules_aditional_pay')),
                                          (4, ref('hr_payroll_rules_contractual_pay')),
                                          (4, ref('hr_payroll_rules_accrued_pay')),
                                          (4, ref('hr_payroll_rules_base_monthly')),
                                          (4, ref('hr_payroll_rules_extra_hour_1_5_monthly')),
                                          (4, ref('hr_payroll_rules_holiday_monthly')),
                                          (4, ref('hr_payroll_rules_extra_hour_holiday_monthly')),
                                          (4, ref('hr_payroll_rules_absence_deduction_monthly')),]"/>
        </record>

        <!-- Fortnightly -->
        <record id="data_structure_fortnightly" model="hr.payroll.structure">
            <field name="name">Estructura Quincenal</field>
            <field name="code">QUINCENAL</field>
            <field name="parent_id" eval="False"/>
            <field name="rule_ids" eval="[(4, ref('hr_payroll_rules_gross')),
                                          (4, ref('hr_payroll_rules_net')),
                                          (4, ref('hr_payroll_rules_worker_ssc')),
                                          (4, ref('hr_payroll_rules_employer_ssc')),
                                          (4, ref('hr_payroll_rules_provisions_thirteenth_monthly_payment')),
                                          (4, ref('hr_payroll_rules_provisions_vacations')),
                                          (4, ref('hr_payroll_rules_rent')),
                                          (4, ref('hr_payroll_rules_retroactive_pay')),
                                          (4, ref('hr_payroll_rules_bonification')),
                                          (4, ref('hr_payroll_rules_aditional_pay')),
                                          (4, ref('hr_payroll_rules_contractual_pay')),
                                          (4, ref('hr_payroll_rules_accrued_pay')),
                                          (4, ref('hr_payroll_rules_base_fortnightly')),
                                          (4, ref('hr_payroll_rules_extra_hour_1_5_fortnightly')),
                                          (4, ref('hr_payroll_rules_holiday_fortnightly')),
                                          (4, ref('hr_payroll_rules_extra_hour_holiday_fortnightly')),
                                          (4, ref('hr_payroll_rules_absence_deduction_fortnightly')),]"/>
        </record>

        <!-- Biweekly -->
        <record id="data_structure_biweekly" model="hr.payroll.structure">
            <field name="name">Estructura Bisemanal</field>
            <field name="code">BISEMANAL</field>
            <field name="parent_id" eval="False"/>
            <field name="rule_ids" eval="[(4, ref('hr_payroll_rules_gross')),
                                          (4, ref('hr_payroll_rules_net')),
                                          (4, ref('hr_payroll_rules_worker_ssc')),
                                          (4, ref('hr_payroll_rules_employer_ssc')),
                                          (4, ref('hr_payroll_rules_provisions_thirteenth_monthly_payment')),
                                          (4, ref('hr_payroll_rules_provisions_vacations')),
                                          (4, ref('hr_payroll_rules_rent')),
                                          (4, ref('hr_payroll_rules_retroactive_pay')),
                                          (4, ref('hr_payroll_rules_bonification')),
                                          (4, ref('hr_payroll_rules_aditional_pay')),
                                          (4, ref('hr_payroll_rules_contractual_pay')),
                                          (4, ref('hr_payroll_rules_accrued_pay')),
                                          (4, ref('hr_payroll_rules_base_biweekly')),
                                          (4, ref('hr_payroll_rules_extra_hour_1_5_biweekly')),
                                          (4, ref('hr_payroll_rules_holiday_biweekly')),
                                          (4, ref('hr_payroll_rules_extra_hour_holiday_biweekly')),
                                          (4, ref('hr_payroll_rules_absence_deduction_biweekly')),]"/>
        </record>

        <!-- Weekly -->
        <record id="data_structure_weekly" model="hr.payroll.structure">
            <field name="name">Estructura Semanal</field>
            <field name="code">SEMANAL</field>
            <field name="parent_id" eval="False"/>
            <field name="rule_ids" eval="[(4, ref('hr_payroll_rules_gross')),
                                          (4, ref('hr_payroll_rules_net')),
                                          (4, ref('hr_payroll_rules_worker_ssc')),
                                          (4, ref('hr_payroll_rules_employer_ssc')),
                                          (4, ref('hr_payroll_rules_provisions_thirteenth_monthly_payment')),
                                          (4, ref('hr_payroll_rules_provisions_vacations')),
                                          (4, ref('hr_payroll_rules_rent')),
                                          (4, ref('hr_payroll_rules_retroactive_pay')),
                                          (4, ref('hr_payroll_rules_bonification')),
                                          (4, ref('hr_payroll_rules_aditional_pay')),
                                          (4, ref('hr_payroll_rules_contractual_pay')),
                                          (4, ref('hr_payroll_rules_accrued_pay')),
                                          (4, ref('hr_payroll_rules_base_weekly')),
                                          (4, ref('hr_payroll_rules_extra_hour_1_5_weekly')),
                                          (4, ref('hr_payroll_rules_holiday_weekly')),
                                          (4, ref('hr_payroll_rules_extra_hour_holiday_weekly')),
                                          (4, ref('hr_payroll_rules_absence_deduction_weekly')),]"/>
        </record>

        <!-- Per Hour -->
        <record id="data_structure_per_hour" model="hr.payroll.structure">
            <field name="name">Estructura Jornal</field>
            <field name="code">JORNAL</field>
            <field name="parent_id" eval="False"/>
            <field name="rule_ids" eval="[(4, ref('hr_payroll_rules_gross')),
                                          (4, ref('hr_payroll_rules_net')),
                                          (4, ref('hr_payroll_rules_worker_ssc')),
                                          (4, ref('hr_payroll_rules_employer_ssc')),
                                          (4, ref('hr_payroll_rules_provisions_thirteenth_monthly_payment')),
                                          (4, ref('hr_payroll_rules_provisions_vacations')),
                                          (4, ref('hr_payroll_rules_rent')),
                                          (4, ref('hr_payroll_rules_retroactive_pay')),
                                          (4, ref('hr_payroll_rules_bonification')),
                                          (4, ref('hr_payroll_rules_aditional_pay')),
                                          (4, ref('hr_payroll_rules_contractual_pay')),
                                          (4, ref('hr_payroll_rules_accrued_pay')),
                                          (4, ref('hr_payroll_rules_base_per_hour')),
                                          (4, ref('hr_payroll_rules_extra_hour_1_5_per_hour')),
                                          (4, ref('hr_payroll_rules_holiday_per_hour')),
                                          (4, ref('hr_payroll_rules_extra_hour_holiday_per_hour')),
                                          (4, ref('hr_payroll_rules_absence_deduction_per_hour')),]"/>
        </record>
    </data>
</openerp>
